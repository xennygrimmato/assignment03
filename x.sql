-- MySQL Script generated by MySQL Workbench
-- Wed Jul  6 17:43:38 2016
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema cnu2016_vtulsyan
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `cnu2016_vtulsyan` ;

-- -----------------------------------------------------
-- Schema cnu2016_vtulsyan
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `cnu2016_vtulsyan` DEFAULT CHARACTER SET utf8 ;
USE `cnu2016_vtulsyan` ;

-- -----------------------------------------------------
-- Table `cnu2016_vtulsyan`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cnu2016_vtulsyan`.`user` ;

CREATE TABLE IF NOT EXISTS `user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(255) NULL,
  `first_name` VARCHAR(100) NULL,
  `last_name` VARCHAR(100) NULL,
  `company_name` VARCHAR(100) NULL DEFAULT NULL,
  `phone` VARCHAR(20) NULL,
  `addr_line1` VARCHAR(45) NULL,
  `addr_line2` VARCHAR(45) NULL DEFAULT NULL,
  `city` VARCHAR(45) NULL DEFAULT NULL,
  `state` VARCHAR(45) NULL DEFAULT NULL,
  `postal_code` VARCHAR(45) NULL DEFAULT NULL,
  `country` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`id`));

  ALTER TABLE `cnu2016_vtulsyan`.`user`
  CHANGE COLUMN `email` `email` VARCHAR(255) NOT NULL ,
  CHANGE COLUMN `first_name` `first_name` VARCHAR(100) NOT NULL ,
  CHANGE COLUMN `last_name` `last_name` VARCHAR(100) NOT NULL ,
  DROP PRIMARY KEY,
  ADD PRIMARY KEY (`id`, `email`, `first_name`, `last_name`);

-- -----------------------------------------------------
-- Table `cnu2016_vtulsyan`.`order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cnu2016_vtulsyan`.`order` ;

CREATE TABLE IF NOT EXISTS `cnu2016_vtulsyan`.`order` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `amount` DECIMAL(2) NOT NULL,
  `payment_type` VARCHAR(45) NULL DEFAULT NULL,
  `date` DATETIME NOT NULL,
  `status` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cnu2016_vtulsyan`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE);

CREATE INDEX `user_id_idx` ON `cnu2016_vtulsyan`.`order` (`user_id` ASC);


-- -----------------------------------------------------
-- Table `cnu2016_vtulsyan`.`category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cnu2016_vtulsyan`.`category` ;

CREATE TABLE IF NOT EXISTS `cnu2016_vtulsyan`.`category` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `description` VARCHAR(500) NULL DEFAULT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `cnu2016_vtulsyan`.`product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cnu2016_vtulsyan`.`product` ;

CREATE TABLE IF NOT EXISTS `cnu2016_vtulsyan`.`product` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `remaining` INT NULL DEFAULT 0,
  `code` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id`, `code`));


-- -----------------------------------------------------
-- Table `cnu2016_vtulsyan`.`feedback`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cnu2016_vtulsyan`.`feedback` ;

CREATE TABLE IF NOT EXISTS `cnu2016_vtulsyan`.`feedback` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `text` VARCHAR(255) NOT NULL,
  `timestamp` DATETIME NULL DEFAULT NULL,
  `user_id` INT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cnu2016_vtulsyan`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `user_id_idx` ON `cnu2016_vtulsyan`.`feedback` (`user_id` ASC);


-- -----------------------------------------------------
-- Table `cnu2016_vtulsyan`.`order_has_product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cnu2016_vtulsyan`.`order_has_product` ;

CREATE TABLE IF NOT EXISTS `cnu2016_vtulsyan`.`order_has_product` (
  `order_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  `quantity` INT NULL DEFAULT 0,
  `buying_cost` DECIMAL(2) NOT NULL,
  `selling_cost` DECIMAL(2) NOT NULL,
  PRIMARY KEY (`order_id`, `product_id`),
  CONSTRAINT `fk_order_has_product_order1`
    FOREIGN KEY (`order_id`)
    REFERENCES `cnu2016_vtulsyan`.`order` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_has_product_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `cnu2016_vtulsyan`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_order_has_product_order1_idx` ON `cnu2016_vtulsyan`.`order_has_product` (`order_id` ASC);

CREATE INDEX `fk_order_has_product_product1_idx` ON `cnu2016_vtulsyan`.`order_has_product` (`product_id` ASC);


-- -----------------------------------------------------
-- Table `cnu2016_vtulsyan`.`category_has_product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cnu2016_vtulsyan`.`category_has_product` ;

CREATE TABLE IF NOT EXISTS `cnu2016_vtulsyan`.`category_has_product` (
  `category_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  PRIMARY KEY (`category_id`, `product_id`),
  CONSTRAINT `fk_category_has_product_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `cnu2016_vtulsyan`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_category_has_product_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `cnu2016_vtulsyan`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_category_has_product_product1_idx` ON `cnu2016_vtulsyan`.`category_has_product` (`product_id` ASC);

CREATE INDEX `fk_category_has_product_category1_idx` ON `cnu2016_vtulsyan`.`category_has_product` (`category_id` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
